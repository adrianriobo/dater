// Code generated by xgen. DO NOT EDIT.

package xunit

import (
	"encoding/xml"
)

// SUREFIRETIME ...
type SUREFIRETIME string

// RerunType ...
type RerunType struct {
	XMLName     xml.Name `xml:"rerunType"`
	MessageAttr string   `xml:"message,attr,omitempty"`
	TypeAttr    string   `xml:"type,attr"`
	StackTrace  string   `xml:"stackTrace"`
	Systemout   string   `xml:"system-out"`
	Systemerr   string   `xml:"system-err"`
}

// Failure ...
type Failure struct {
	XMLName     xml.Name `xml:"failure"`
	TypeAttr    string   `xml:"type,attr,omitempty"`
	MessageAttr string   `xml:"message,attr,omitempty"`
}

// Error ...
type Error struct {
	XMLName     xml.Name `xml:"error"`
	TypeAttr    string   `xml:"type,attr,omitempty"`
	MessageAttr string   `xml:"message,attr,omitempty"`
}

// Skipped ...
type Skipped struct {
	XMLName     xml.Name `xml:"skipped"`
	TypeAttr    string   `xml:"type,attr,omitempty"`
	MessageAttr string   `xml:"message,attr,omitempty"`
}

// Properties ...
type Properties struct {
	XMLName  xml.Name    `xml:"properties"`
	Property []*Property `xml:"property"`
}

// Property ...
type Property struct {
	XMLName   xml.Name `xml:"property"`
	NameAttr  string   `xml:"name,attr"`
	ValueAttr string   `xml:"value,attr"`
}

// Systemerr ...
type Systemerr string

// Systemout ...
type Systemout string

// RerunFailure ...
type RerunFailure *RerunType

// RerunError ...
type RerunError *RerunType

// FlakyFailure ...
type FlakyFailure *RerunType

// FlakyError ...
type FlakyError *RerunType

// Testcase ...
type Testcase struct {
	XMLName       xml.Name     `xml:"testcase"`
	NameAttr      string       `xml:"name,attr"`
	TimeAttr      string       `xml:"time,attr,omitempty"`
	ClassnameAttr string       `xml:"classname,attr,omitempty"`
	GroupAttr     string       `xml:"group,attr,omitempty"`
	Skipped       []*Skipped   `xml:"skipped"`
	Error         []*Error     `xml:"error"`
	Failure       []*Failure   `xml:"failure"`
	RerunFailure  []*RerunType `xml:"rerunFailure"`
	RerunError    []*RerunType `xml:"rerunError"`
	FlakyFailure  []*RerunType `xml:"flakyFailure"`
	FlakyError    []*RerunType `xml:"flakyError"`
	Systemout     []string     `xml:"system-out"`
	Systemerr     []string     `xml:"system-err"`
}

// Testsuite ...
type Testsuite struct {
	XMLName       xml.Name      `xml:"testsuite"`
	NameAttr      string        `xml:"name,attr"`
	TestsAttr     string        `xml:"tests,attr"`
	FailuresAttr  string        `xml:"failures,attr"`
	ErrorsAttr    string        `xml:"errors,attr"`
	GroupAttr     string        `xml:"group,attr,omitempty"`
	TimeAttr      string        `xml:"time,attr,omitempty"`
	SkippedAttr   string        `xml:"skipped,attr,omitempty"`
	TimestampAttr string        `xml:"timestamp,attr,omitempty"`
	HostnameAttr  string        `xml:"hostname,attr,omitempty"`
	IdAttr        string        `xml:"id,attr,omitempty"`
	PackageAttr   string        `xml:"package,attr,omitempty"`
	FileAttr      string        `xml:"file,attr,omitempty"`
	LogAttr       string        `xml:"log,attr,omitempty"`
	UrlAttr       string        `xml:"url,attr,omitempty"`
	VersionAttr   string        `xml:"version,attr,omitempty"`
	Testsuite     []*Testsuite  `xml:"testsuite"`
	Properties    []*Properties `xml:"properties"`
	Testcase      []*Testcase   `xml:"testcase"`
	Systemout     []string      `xml:"system-out"`
	Systemerr     []string      `xml:"system-err"`
}

// Testsuites ...
type Testsuites struct {
	XMLName      xml.Name     `xml:"testsuites"`
	NameAttr     string       `xml:"name,attr,omitempty"`
	TimeAttr     string       `xml:"time,attr,omitempty"`
	TestsAttr    string       `xml:"tests,attr,omitempty"`
	FailuresAttr string       `xml:"failures,attr,omitempty"`
	ErrorsAttr   string       `xml:"errors,attr,omitempty"`
	Testsuite    []*Testsuite `xml:"testsuite"`
}
